{
  "skillName": "Python",
  "level": "beginner",
  "questions": [
    {
      "id": 1,
      "category": "Core",
      "question": "What is Python?",
      "answer": "Python is a high-level, interpreted programming language known for its simplicity and readability. It emphasizes code readability with its notable use of significant whitespace and supports multiple programming paradigms, including procedural, object-oriented, and functional programming."
    },
    {
      "id": 2,
      "category": "Data Types",
      "question": "What are the basic data types in Python?",
      "answer": "Python's basic data types include: integers (int), floating-point numbers (float), strings (str), booleans (bool), and None. Complex numbers are also supported. Python also has built-in container types like lists, tuples, sets, and dictionaries."
    },
    {
      "id": 3,
      "category": "Control Flow",
      "question": "How does indentation work in Python?",
      "answer": "Python uses indentation to define code blocks, unlike many other programming languages that use curly braces {}. A code block (body of a function, loop, etc.) starts with indentation and ends with the first unindented line. The amount of indentation is up to you, but it must be consistent throughout that block."
    },
    {
      "id": 4,
      "category": "Functions",
      "question": "What is a lambda function in Python?",
      "answer": "A lambda function is a small anonymous function that can have any number of arguments but can only have one expression. It's often used for short operations that don't require a full function definition. The syntax is: lambda arguments: expression."
    },
    {
      "id": 5,
      "category": "OOP",
      "question": "What is a class in Python?",
      "answer": "A class is a blueprint for creating objects in Python. It encapsulates data and behavior that are related. Objects are instances of classes, which contain their own data and methods. Classes support inheritance, allowing for code reuse and establishing relationships between classes."
    },
    {
      "id": 6,
      "category": "Collections",
      "question": "What is the difference between lists and tuples in Python?",
      "answer": "Lists are mutable sequences that can be modified after creation (items can be added, removed, or changed). Tuples are immutable sequences that cannot be modified after creation. Lists use square brackets [], while tuples use parentheses (). Tuples are generally used for heterogeneous data, while lists are used for homogeneous data."
    },
    {
      "id": 7,
      "category": "Modules",
      "question": "What are Python modules and how do you use them?",
      "answer": "A module is a file containing Python definitions and statements. They allow you to logically organize your code into reusable components. You can use the 'import' statement to include modules in your program. Python comes with a large standard library of modules, and you can also create your own."
    },
    {
      "id": 8,
      "category": "Exceptions",
      "question": "How do you handle exceptions in Python?",
      "answer": "Exceptions in Python are handled using try-except blocks. The try block contains code that might raise an exception, and the except block contains the code that handles the exception. You can also use finally blocks for cleanup code that should run regardless of whether an exception occurred."
    }
  ]
}
